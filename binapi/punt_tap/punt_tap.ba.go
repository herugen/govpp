// Code generated by GoVPP's binapi-generator. DO NOT EDIT.
// versions:
//  binapi-generator: v0.7.0
//  VPP:              unknown
// source: api/plugins/punt_tap.api.json

// Package punt_tap contains generated bindings for API file punt_tap.api.
//
// Contents:
// -  5 messages
package punt_tap

import (
	api "go.fd.io/govpp/api"
	interface_types "go.fd.io/govpp/binapi/interface_types"
	codec "go.fd.io/govpp/codec"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the GoVPP api package it is being compiled against.
// A compilation error at this line likely means your copy of the
// GoVPP api package needs to be updated.
const _ = api.GoVppAPIPackageIsVersion2

const (
	APIFile    = "punt_tap"
	APIVersion = "1.0.0"
	VersionCrc = 0xab22d9ad
)

// PuntTapPairAddDel defines message 'punt_tap_pair_add_del'.
type PuntTapPairAddDel struct {
	IsAdd        bool                           `binapi:"bool,name=is_add" json:"is_add,omitempty"`
	PhySwIfIndex interface_types.InterfaceIndex `binapi:"interface_index,name=phy_sw_if_index" json:"phy_sw_if_index,omitempty"`
	TapSwIfIndex interface_types.InterfaceIndex `binapi:"interface_index,name=tap_sw_if_index" json:"tap_sw_if_index,omitempty"`
}

func (m *PuntTapPairAddDel) Reset()               { *m = PuntTapPairAddDel{} }
func (*PuntTapPairAddDel) GetMessageName() string { return "punt_tap_pair_add_del" }
func (*PuntTapPairAddDel) GetCrcString() string   { return "001d30d0" }
func (*PuntTapPairAddDel) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *PuntTapPairAddDel) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 1 // m.IsAdd
	size += 4 // m.PhySwIfIndex
	size += 4 // m.TapSwIfIndex
	return size
}
func (m *PuntTapPairAddDel) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeBool(m.IsAdd)
	buf.EncodeUint32(uint32(m.PhySwIfIndex))
	buf.EncodeUint32(uint32(m.TapSwIfIndex))
	return buf.Bytes(), nil
}
func (m *PuntTapPairAddDel) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.IsAdd = buf.DecodeBool()
	m.PhySwIfIndex = interface_types.InterfaceIndex(buf.DecodeUint32())
	m.TapSwIfIndex = interface_types.InterfaceIndex(buf.DecodeUint32())
	return nil
}

// PuntTapPairAddDelReply defines message 'punt_tap_pair_add_del_reply'.
type PuntTapPairAddDelReply struct {
	Retval int32 `binapi:"i32,name=retval" json:"retval,omitempty"`
}

func (m *PuntTapPairAddDelReply) Reset()               { *m = PuntTapPairAddDelReply{} }
func (*PuntTapPairAddDelReply) GetMessageName() string { return "punt_tap_pair_add_del_reply" }
func (*PuntTapPairAddDelReply) GetCrcString() string   { return "e8d4e804" }
func (*PuntTapPairAddDelReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *PuntTapPairAddDelReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	return size
}
func (m *PuntTapPairAddDelReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	return buf.Bytes(), nil
}
func (m *PuntTapPairAddDelReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	return nil
}

// PuntTapPairDetails defines message 'punt_tap_pair_details'.
// InProgress: the message form may change in the future versions
type PuntTapPairDetails struct {
	PhySwIfIndex interface_types.InterfaceIndex `binapi:"interface_index,name=phy_sw_if_index" json:"phy_sw_if_index,omitempty"`
	TapSwIfIndex interface_types.InterfaceIndex `binapi:"interface_index,name=tap_sw_if_index" json:"tap_sw_if_index,omitempty"`
}

func (m *PuntTapPairDetails) Reset()               { *m = PuntTapPairDetails{} }
func (*PuntTapPairDetails) GetMessageName() string { return "punt_tap_pair_details" }
func (*PuntTapPairDetails) GetCrcString() string   { return "b5287fe2" }
func (*PuntTapPairDetails) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *PuntTapPairDetails) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.PhySwIfIndex
	size += 4 // m.TapSwIfIndex
	return size
}
func (m *PuntTapPairDetails) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(uint32(m.PhySwIfIndex))
	buf.EncodeUint32(uint32(m.TapSwIfIndex))
	return buf.Bytes(), nil
}
func (m *PuntTapPairDetails) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.PhySwIfIndex = interface_types.InterfaceIndex(buf.DecodeUint32())
	m.TapSwIfIndex = interface_types.InterfaceIndex(buf.DecodeUint32())
	return nil
}

// PuntTapPairGet defines message 'punt_tap_pair_get'.
type PuntTapPairGet struct {
	Cursor uint32 `binapi:"u32,name=cursor" json:"cursor,omitempty"`
}

func (m *PuntTapPairGet) Reset()               { *m = PuntTapPairGet{} }
func (*PuntTapPairGet) GetMessageName() string { return "punt_tap_pair_get" }
func (*PuntTapPairGet) GetCrcString() string   { return "f75ba505" }
func (*PuntTapPairGet) GetMessageType() api.MessageType {
	return api.RequestMessage
}

func (m *PuntTapPairGet) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Cursor
	return size
}
func (m *PuntTapPairGet) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeUint32(m.Cursor)
	return buf.Bytes(), nil
}
func (m *PuntTapPairGet) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Cursor = buf.DecodeUint32()
	return nil
}

// PuntTapPairGetReply defines message 'punt_tap_pair_get_reply'.
type PuntTapPairGetReply struct {
	Retval int32  `binapi:"i32,name=retval" json:"retval,omitempty"`
	Cursor uint32 `binapi:"u32,name=cursor" json:"cursor,omitempty"`
}

func (m *PuntTapPairGetReply) Reset()               { *m = PuntTapPairGetReply{} }
func (*PuntTapPairGetReply) GetMessageName() string { return "punt_tap_pair_get_reply" }
func (*PuntTapPairGetReply) GetCrcString() string   { return "53b48f5d" }
func (*PuntTapPairGetReply) GetMessageType() api.MessageType {
	return api.ReplyMessage
}

func (m *PuntTapPairGetReply) Size() (size int) {
	if m == nil {
		return 0
	}
	size += 4 // m.Retval
	size += 4 // m.Cursor
	return size
}
func (m *PuntTapPairGetReply) Marshal(b []byte) ([]byte, error) {
	if b == nil {
		b = make([]byte, m.Size())
	}
	buf := codec.NewBuffer(b)
	buf.EncodeInt32(m.Retval)
	buf.EncodeUint32(m.Cursor)
	return buf.Bytes(), nil
}
func (m *PuntTapPairGetReply) Unmarshal(b []byte) error {
	buf := codec.NewBuffer(b)
	m.Retval = buf.DecodeInt32()
	m.Cursor = buf.DecodeUint32()
	return nil
}

func init() { file_punt_tap_binapi_init() }
func file_punt_tap_binapi_init() {
	api.RegisterMessage((*PuntTapPairAddDel)(nil), "punt_tap_pair_add_del_001d30d0")
	api.RegisterMessage((*PuntTapPairAddDelReply)(nil), "punt_tap_pair_add_del_reply_e8d4e804")
	api.RegisterMessage((*PuntTapPairDetails)(nil), "punt_tap_pair_details_b5287fe2")
	api.RegisterMessage((*PuntTapPairGet)(nil), "punt_tap_pair_get_f75ba505")
	api.RegisterMessage((*PuntTapPairGetReply)(nil), "punt_tap_pair_get_reply_53b48f5d")
}

// Messages returns list of all messages in this module.
func AllMessages() []api.Message {
	return []api.Message{
		(*PuntTapPairAddDel)(nil),
		(*PuntTapPairAddDelReply)(nil),
		(*PuntTapPairDetails)(nil),
		(*PuntTapPairGet)(nil),
		(*PuntTapPairGetReply)(nil),
	}
}
